
# Fix arguments
newargs=""
for arg in $@; do
    if [ "$arg" = "waitforexitandrun" ]; then
        newargs="$newargs run"
    else
        newargs="$newargs $arg"
    fi
done
# unsafe do not care - required to fix strings being flattened harder than your ex boyfriend's dick
eval "set -- $newargs"

# LiveSplit Binaries
hotkeys_path=$HOME/LiveSplit/live-split-hotkeys
livesplit_path=$HOME/LiveSplit/LiveSplit.exe

# Setup for Wine
proton_path=${STEAM_COMPAT_TOOL_PATHS%%:*}
alias proton="$proton_path/proton"
WINE="$proton_path/files/bin/wine"
WINESERVER="$proton_path/files/bin/wineserver"
WINEPREFIX=${STEAM_COMPAT_DATA_PATH}/pfx
export WINE="$WINE"
export WINESERVER="$WINESERVER"
export WINEPREFIX="$WINEPREFIX"

if [ -z "$STEAM_COMPAT_DATA_PATH" ] || [ -z "$STEAM_COMPAT_TOOL_PATHS" ]; then
    echo "This script is intended to be run as a Steam compatibility tool."
    echo "Please set the environment variables STEAM_COMPAT_DATA_PATH and STEAM_COMPAT_TOOL_PATHS and try again."
    exit 1
fi

if [ -z $(which winetricks) ]; then
    echo "Winetricks is not installed. Please install winetricks from your distro's package manager."
    exit 1
fi

if [ -z $(which zenity) ]; then
    echo "Zenity is required for this script to work. Please install it and try again."
    exit 1
fi

# Check for gdiplus
installed=$(winetricks list-installed | grep gdiplus)

# Get game name and path
for i; do :; done
game_name=$(basename "$i")
game_path=$i

# Install gdiplus if not installed
if [ -z $installed ]; then
    echo installing gdiplus
    winetricks -q gdiplus
fi

if ! [ -d $WINEPREFIX/drive_c/users/steamuser/Favorites/LiveSplit ]; then
    ln -s $HOME/LiveSplit $WINEPREFIX/drive_c/users/steamuser/Favorites/LiveSplit
fi

unset WINE WINESERVER WINEPREFIX

# Run LiveSplit and the game
proton run $livesplit_path &
env "$@" &
sleep 5
game_pid=$(pgrep -x $game_name)

# Hotkeys
if [[ $LIVESPLIT_HOTKEYS_ENABLED == 1 ]]; then
    echo starting hotkey listener
    sleep 10
    $hotkeys_path &
    lshk_pid=$!
    ls_pid=$(pgrep LiveSplit.exe)   
fi

# Restartable loop
while [[ $LIVESPLIT_RESTARTABLE == 1 ]]; do
    tail --pid $game_pid -f /dev/null & wait $!
    zenity --question --text="The game has exited. Do you wish to relaunch it?" --ok-label="Yes" --cancel-label="No"
    if [ $? -ne 0 ]; then
        break
    fi
    env "$@" &
    sleep 5
    game_pid=$(pgrep -x $game_name)
done

# Cleanup
if [[ $LIVESPLIT_HOTKEYS_ENABLED == 1 ]]; then
    tail --pid $ls_pid -f /dev/null & wait $!
    kill -9 $lshk_pid
fi